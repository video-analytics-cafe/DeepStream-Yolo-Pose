version: "3.9"

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.0.1
    hostname: zookeeper
    container_name: zookeeper
    networks:
      - backend
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  broker:
    image: confluentinc/cp-kafka:7.0.1
    hostname: broker
    container_name: broker
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    networks:
      - frontend
      - backend
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CONFLUENT_SUPPORT_METRICS_ENABLE: 'false'

  node-red:
    image: nodered/node-red:2.2.0-14
    hostname: node-red
    container_name: node-red
    depends_on:
      - nvds
    ports:
      - "1880:1880"
    networks:
      - frontend
      - backend
    environment:
      - TZ=Asia/Tokyo
    volumes:
      - ${PWD}/node-red/data:/data
    tty: true

  nvds:
    image: nvcr.io/nvidia/deepstream:6.0-devel
    hostname: nvds
    container_name: nvds
    depends_on:
      - broker
    networks:
      - frontend
      - backend
    environment:
      - TZ=Asia/Tokyo
      - DISPLAY=${DISPLAY}
    volumes:
      - /tmp/.X11-unix:/tmp/.X11-unix
      - /var/run/docker.sock:/var/run/docker.sock
      - ${PWD}:/data
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [ gpu ]
    tty: true

networks:
  frontend:
  backend:
    internal: true